name: "Build & Release"

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  build:
    name: "Build & Release"
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable"

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: "oracle"
          java-version: "17"

      - name: Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: 3.8.1

      - name: Cache
        uses: actions/cache@v4.2.3
        with:
          path: |
            ~/.pub-cache
            .dart_tool
            build
          key: ${{ runner.os }}-flutter-${{ hashFiles('pubspec.yaml') }}
          restore-keys: |
            ${{ runner.os }}-flutter-

      - name: Install Dependencies
        run: flutter pub get

      - name: Decode Keystore
        run: echo $KEYSTORE_BASE64 | base64 --decode > android/app/key.jks
        env:
          KEYSTORE: ${{ secrets.KEYSTORE_BASE64 }}

      - name: Create key.properties
        run: |
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=keystore.jks" >> android/key.properties

      - name: Extract version and name from pubspec.yaml
        id: extract_version_and_name
        run: |
          version=$(grep '^version: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          name=$(grep '^name: ' pubspec.yaml | cut -d ' ' -f 2 | tr -d '\r')
          echo "VERSION=$version" >> $GITHUB_ENV
          echo "NAME=$name" >> $GITHUB_ENV


      - name: Build APK
        run: flutter build apk --release

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Rename files
        run: |
          mv build/app/outputs/flutter-apk/app-release.apk build/app/outputs/flutter-apk/${{ env.NAME }}-v${{ env.VERSION }}.apk
          mv build/app/outputs/bundle/release/app-release.aab build/app/outputs/bundle/release/${{ env.NAME }}-v${{ env.VERSION }}.aab

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Releases
          path: |
            build/app/outputs/flutter-apk/${{ env.NAME }}-v${{ env.VERSION }}.apk
            build/app/outputs/bundle/release/${{ env.NAME }}-v${{ env.VERSION }}.aab
            build/ios_build.tar.g

      - name: Check if Tag Exists
        id: check_tag
        run: |
          if git rev-parse "v${{ env.VERSION }}" >/dev/null 2>&1; then
            echo "TAG_EXISTS=true" >> $GITHUB_ENV
          else
            echo "TAG_EXISTS=false" >> $GITHUB_ENV
          fi
      - name: Modify Tag
        if: env.TAG_EXISTS == 'true'
        id: modify_tag
        run: |
          new_version="${{ env.VERSION }}-build-${{ github.run_number }}"
          echo "VERSION=$new_version" >> $GITHUB_ENV

      - name: Create Release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          files: |
            build/app/outputs/flutter-apk/${{ env.NAME }}-v${{ env.VERSION }}.apk
            build/app/outputs/bundle/release/${{ env.NAME }}-v${{ env.VERSION }}.aab
          automatic_release_tag: "v${{ env.VERSION }}"
          prerelease: true
          title: "Release v${{ env.VERSION }}"
          repo_token: ${{ secrets.TOKEN }}
